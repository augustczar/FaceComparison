# Simple workflow for deploying static content to GitHub Pages
name:
  Deploy on AWS and GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  checks: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Maven install
        run: mvn install

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/FaceComparison/facecomparison/target/surefire-reports/TEST-*.xml'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jar-artifacts
          path: "FaceComparison/facecomparison/target/facecomparison-0.0.1-SNAPSHOT.jar"


  deployBackend:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: aws
      url: ${{ steps.manifest.outputs.url }}

    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: jar-artifacts
          path: FaceComparison/facecomparison/target
      - name: Install Plugin and Deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "serverless plugin install --name serverless-manifest-plugin && serverless deploy --stage prd"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: manifest
        id: manifest
        run: |
          url=$(cat .serverless/manifest.json | jq -r '.prd.urls.apiGateway')
          echo "::set-output name=url::$url"
    outputs:
      apiGatewayUrl: ${{ steps.manifest.outputs.url }}
      

  deployFrontend:
    needs: deployBackend
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Switch api URL in index.html
        run: |
          sed -i "s/\${URL_TO_SUBSTITUTE}/$(echo '${{ needs.deployBackend.outputs.apiGatewayUrl }}' | sed 's/\//\\\//g')/g" src/main/resources/static/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: 'FaceComparison/facecomparison/src/main/resources/static/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2